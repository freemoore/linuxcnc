# Generated by PNCconf at Wed Aug  6 13:19:12 2014
# If you make changes to this file, they will be
# overwritten when you run PNCconf agaiN

loadrt [KINS]KINEMATICS
#autoconverted  trivkins
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[KINS]JOINTS
 
#loadrt probe_parport
loadrt hostmot2
loadrt hm2_pci config="firmware=hm2/5i23/5i23_7i48_7i52.BIT num_encoders=7 num_pwmgens=6 num_3pwmgens=0 num_stepgens=0 sserial_port_0=11xxxxxx " 
setp     hm2_5i23.0.pwmgen.pwm_frequency 24000
setp     hm2_5i23.0.pwmgen.pdm_frequency 6000
setp     hm2_5i23.0.watchdog.timeout_ns 10000000
#loadrt estop_latch
loadrt mux16 names=mux16.0,jogincr,foincr,soincr
loadrt pid names=pid.x,pid.y,pid.z,pid.s
loadrt abs names=abs.spindle
loadrt lowpass names=lowpass.spindle
loadrt scale names=scale.spindle,scale.feedrate-override,scale.spindle-override,scale.spindle-load,scale.velocity-override,scale.jog-incr,scale.man-jog-incr




#addf estop-latch.0 					servo-thread
addf mux16.0              				servo-thread
addf jogincr              				servo-thread
addf foincr               				servo-thread
addf soincr               				servo-thread

addf hm2_5i23.0.read 					servo-thread
addf motion-command-handler 			servo-thread
addf motion-controller 					servo-thread
addf pid.x.do-pid-calcs                 servo-thread
addf pid.y.do-pid-calcs                 servo-thread
addf pid.z.do-pid-calcs                 servo-thread
addf pid.s.do-pid-calcs                 servo-thread
addf abs.spindle                 		servo-thread
addf scale.spindle                 		servo-thread
addf scale.feedrate-override            servo-thread
addf scale.spindle-override             servo-thread
addf scale.spindle-load                 servo-thread
addf scale.velocity-override            servo-thread
addf scale.jog-incr						servo-thread
addf lowpass.spindle             		servo-thread
addf hm2_5i23.0.write         			servo-thread




# external output signals


# --- ESTOP-OUT ---
# net estop-out hm2_5i23.0.7i84.0.0.output-00
setp iocontrol.0.emc-enable-in TRUE
#net estop-loopout iocontrol.0.emc-enable-in <= estop-latch.0.ok-out
#net estop-loopin iocontrol.0.user-enable-out => estop-latch.0.ok-in
#net estop-reset iocontrol.0.user-request-enable => estop-latch.0.reset
#net remote-estop estop-latch.0.fault-in <=  hm2_5i23.0.7i84.0.0.input-05

# --- ESTOP-EXT ---
#net estop-ext     	<=  hm2_5i23.0.7i84.0.0.input-04

# --- SPINDLE-ON ---
net spindle-on hm2_5i23.0.7i84.0.0.output-05

# --- SPINDLE-CW ---
net spindle-cw hm2_5i23.0.7i84.0.0.output-06

# --- SPINDLE-CCW ---
#net spindle-ccw hm2_5i23.0.7i84.0.0.output-07

# --- SPINDLE-BRAKE ---
net spindle-brake hm2_5i23.0.7i84.0.0.output-08

# --- COOLANT-MIST ---
net coolant-mist hm2_5i23.0.7i84.0.0.output-03

# --- COOLANT-FLOOD ---
net coolant-flood hm2_5i23.0.7i84.0.0.output-02

# --- MACHINE-IS-ENABLED ---
# andy changed wiring temporarily so wire30 (which seems to be ENABLE) is on output 07
#next line was output-01
net machine-is-enabled hm2_5i23.0.7i84.0.0.output-07


# external input signals

# --- VFD LOADMETER ---  		Analogue Input
#net vfd-load     	<=  hm2_5i23.0.7i84.0.0.analogin0

# --- MPG AXIS SELECT ---  		Analogue Input
#net mpg-axis     	<=  hm2_5i23.0.7i84.0.0.analogin1

# --- MPG INCREMENT --- 		Analogue Input 
#net mpg-incr-input     <=  hm2_5i23.0.7i84.0.0.analogin2

# --- FEED RATE OVERRIDE + MANUAL JOG - Analogue Input 
#net fro-adc-input     	<=  hm2_5i23.0.7i84.0.1.analogin0

# --- SPINDLE SPEED OVERRIDE ---	Analogue Input 
#net sso-adc-input     	<=  hm2_5i23.0.7i84.0.1.analogin1

# --- RAPID (VELOCITY)OVERRIDE ---	Analogue Input 
#net vro-adc-input     	<=  hm2_5i23.0.7i84.0.1.analogin2

# --- MODE SELECT SWITCH ---		Analogue Input 
#net so-incr-a     	<=  hm2_5i23.0.7i84.0.1.analogin3



# --- ALL-LIMIT ---
#net all-limit     	<=  hm2_5i23.0.7i84.0.0.input-19

# --- HOME-X ---
#net home-x     	<=  hm2_5i23.0.7i84.0.0.input-16

# --- HOME-Y ---
#net home-y     	<=  hm2_5i23.0.7i84.0.0.input-17

# --- HOME-Z ---
#net home-z     	<=  hm2_5i23.0.7i84.0.0.input-18

# --- CYCLE-START ---
#net cycle-start     	<=  hm2_5i23.0.7i84.0.1.input-04

# --- ABORT / FEED HOLD ---
#net abort     		<=  hm2_5i23.0.7i84.0.1.input-05

# --- JOG-X-POS ---
#net jog-x-pos     	<=  hm2_5i23.0.7i84.0.0.input-05

# --- JOG-X-NEG ---
#net jog-x-neg     	<=  hm2_5i23.0.7i84.0.0.input-06

# --- JOG-Y-POS ---
#net jog-y-pos     	<=  hm2_5i23.0.7i84.0.0.input-07

# --- JOG-Y-NEG ---
#net jog-y-neg     	<=  hm2_5i23.0.7i84.0.0.input-08

# --- JOG-Z-POS ---
#net jog-z-pos     	<=  hm2_5i23.0.7i84.0.0.input-09

# --- JOG-Z-NEG ---
#net jog-z-neg     	<=  hm2_5i23.0.7i84.0.0.input-10


# --- LOW LUBE ---
#net joint-select-a   	<=  hm2_5i23.0.7i84.0.0.input-13

# --- JOINT-SELECT-A ---
#net joint-select-a    <=  hm2_5i23.0.7i64.0.0.input-17

# --- JOINT-SELECT-B ---
#net joint-select-b    <=  hm2_5i23.0.7i64.0.0.input-18

# --- JOINT-SELECT-C ---
#net joint-select-c    <=  hm2_5i23.0.7i64.0.0.input-19

#*******************
#  AXIS X
#*******************

setp   pid.x.Pgain     [JOINT_0]P
setp   pid.x.Igain     [JOINT_0]I
setp   pid.x.Dgain     [JOINT_0]D
setp   pid.x.bias      [JOINT_0]BIAS
setp   pid.x.FF0       [JOINT_0]FF0
setp   pid.x.FF1       [JOINT_0]FF1
setp   pid.x.FF2       [JOINT_0]FF2
setp   pid.x.deadband  [JOINT_0]DEADBAND
setp   pid.x.maxoutput [JOINT_0]MAX_OUTPUT

net x-index-enable  <=>  pid.x.index-enable
net x-enable       => pid.x.enable
net x-output       => pid.x.output
net x-pos-cmd      => pid.x.command
net x-vel-fb       => pid.x.feedback-deriv
net x-pos-fb       => pid.x.feedback

# ---PWM Generator signals/setup---

setp   hm2_5i23.0.pwmgen.00.output-type 2
setp   hm2_5i23.0.pwmgen.00.scale  [JOINT_0]OUTPUT_SCALE

net x-output                             => hm2_5i23.0.pwmgen.00.value
net x-pos-cmd    joint.0.motor-pos-cmd
net x-enable     joint.0.amp-enable-out  => hm2_5i23.0.pwmgen.00.enable

# ---Encoder feedback signals/setup---

setp    hm2_5i23.0.encoder.00.counter-mode 0
setp    hm2_5i23.0.encoder.00.filter 1
setp    hm2_5i23.0.encoder.00.index-invert 0
setp    hm2_5i23.0.encoder.00.index-mask 0
setp    hm2_5i23.0.encoder.00.index-mask-invert 0
setp    hm2_5i23.0.encoder.00.scale  [JOINT_0]ENCODER_SCALE

net x-pos-fb               <=  hm2_5i23.0.encoder.00.position
net x-vel-fb               <=  hm2_5i23.0.encoder.00.velocity
net x-pos-fb               =>  joint.0.motor-pos-fb
net x-index-enable    joint.0.index-enable  <=>  hm2_5i23.0.encoder.00.index-enable
net x-pos-rawcounts        <=  hm2_5i23.0.encoder.00.rawcounts

# ---setup home / limit switch signals---

net home-x     =>  joint.0.home-sw-in
net all-limit     =>  joint.0.neg-lim-sw-in
net all-limit     =>  joint.0.pos-lim-sw-in

#*******************
#  AXIS Y
#*******************

setp   pid.y.Pgain     [JOINT_1]P
setp   pid.y.Igain     [JOINT_1]I
setp   pid.y.Dgain     [JOINT_1]D
setp   pid.y.bias      [JOINT_1]BIAS
setp   pid.y.FF0       [JOINT_1]FF0
setp   pid.y.FF1       [JOINT_1]FF1
setp   pid.y.FF2       [JOINT_1]FF2
setp   pid.y.deadband  [JOINT_1]DEADBAND
setp   pid.y.maxoutput [JOINT_1]MAX_OUTPUT

net y-index-enable  <=>  pid.y.index-enable
net y-enable       => pid.y.enable
net y-output       => pid.y.output
net y-pos-cmd      => pid.y.command
net y-vel-fb       => pid.y.feedback-deriv
net y-pos-fb       => pid.y.feedback

# ---PWM Generator signals/setup---

setp   hm2_5i23.0.pwmgen.01.output-type 2
setp   hm2_5i23.0.pwmgen.01.scale  [JOINT_1]OUTPUT_SCALE

net y-output                             => hm2_5i23.0.pwmgen.01.value
net y-pos-cmd    joint.1.motor-pos-cmd
net y-enable     joint.1.amp-enable-out  => hm2_5i23.0.pwmgen.01.enable

# ---Encoder feedback signals/setup---

setp    hm2_5i23.0.encoder.01.counter-mode 0
setp    hm2_5i23.0.encoder.01.filter 1
setp    hm2_5i23.0.encoder.01.index-invert 0
setp    hm2_5i23.0.encoder.01.index-mask 0
setp    hm2_5i23.0.encoder.01.index-mask-invert 0
setp    hm2_5i23.0.encoder.01.scale  [JOINT_1]ENCODER_SCALE

net y-pos-fb               <=  hm2_5i23.0.encoder.01.position
net y-vel-fb               <=  hm2_5i23.0.encoder.01.velocity
net y-pos-fb               =>  joint.1.motor-pos-fb
net y-index-enable    joint.1.index-enable  <=>  hm2_5i23.0.encoder.01.index-enable
net y-pos-rawcounts        <=  hm2_5i23.0.encoder.01.rawcounts

# ---setup home / limit switch signals---

net home-y     =>  joint.1.home-sw-in
net all-limit     =>  joint.1.neg-lim-sw-in
net all-limit     =>  joint.1.pos-lim-sw-in

#*******************
#  AXIS Z
#*******************

setp   pid.z.Pgain     [JOINT_2]P
setp   pid.z.Igain     [JOINT_2]I
setp   pid.z.Dgain     [JOINT_2]D
setp   pid.z.bias      [JOINT_2]BIAS
setp   pid.z.FF0       [JOINT_2]FF0
setp   pid.z.FF1       [JOINT_2]FF1
setp   pid.z.FF2       [JOINT_2]FF2
setp   pid.z.deadband  [JOINT_2]DEADBAND
setp   pid.z.maxoutput [JOINT_2]MAX_OUTPUT

net z-index-enable  <=>  pid.z.index-enable
net z-enable       => pid.z.enable
net z-output       => pid.z.output
net z-pos-cmd      => pid.z.command
net z-vel-fb       => pid.z.feedback-deriv
net z-pos-fb       => pid.z.feedback

# ---PWM Generator signals/setup---

setp   hm2_5i23.0.pwmgen.02.output-type 2
setp   hm2_5i23.0.pwmgen.02.scale  [JOINT_2]OUTPUT_SCALE

net z-output                             => hm2_5i23.0.pwmgen.02.value
net z-pos-cmd    joint.2.motor-pos-cmd
net z-enable     joint.2.amp-enable-out  => hm2_5i23.0.pwmgen.02.enable

# ---Encoder feedback signals/setup---

setp    hm2_5i23.0.encoder.02.counter-mode 0
setp    hm2_5i23.0.encoder.02.filter 1
setp    hm2_5i23.0.encoder.02.index-invert 0
setp    hm2_5i23.0.encoder.02.index-mask 0
setp    hm2_5i23.0.encoder.02.index-mask-invert 0
setp    hm2_5i23.0.encoder.02.scale  [JOINT_2]ENCODER_SCALE

net z-pos-fb               <=  hm2_5i23.0.encoder.02.position
net z-vel-fb               <=  hm2_5i23.0.encoder.02.velocity
net z-pos-fb               =>  joint.2.motor-pos-fb
net z-index-enable    joint.2.index-enable  <=>  hm2_5i23.0.encoder.02.index-enable
net z-pos-rawcounts        <=  hm2_5i23.0.encoder.02.rawcounts

# ---setup home / limit switch signals---

net home-z     =>  joint.2.home-sw-in
net all-limit     =>  joint.2.neg-lim-sw-in
net all-limit     =>  joint.2.pos-lim-sw-in

#*******************
#  SPINDLE S
#*******************

# ---PWM Generator signals/setup---

setp   hm2_5i23.0.pwmgen.05.output-type 2
setp   hm2_5i23.0.pwmgen.05.scale  [SPINDLE_9]OUTPUT_SCALE


net spindle-vel-cmd     => hm2_5i23.0.pwmgen.05.value
net machine-is-enabled      => hm2_5i23.0.pwmgen.05.enable

# ---Encoder feedback signals/setup---

setp    hm2_5i23.0.encoder.05.counter-mode 0
setp    hm2_5i23.0.encoder.05.filter 1
setp    hm2_5i23.0.encoder.05.index-invert 0
setp    hm2_5i23.0.encoder.05.index-mask 0
setp    hm2_5i23.0.encoder.05.index-mask-invert 0
setp    hm2_5i23.0.encoder.05.scale  [SPINDLE_9]ENCODER_SCALE

net spindle-revs              <=  hm2_5i23.0.encoder.05.position
net spindle-vel-fb            <=  hm2_5i23.0.encoder.05.velocity
net spindle-index-enable     <=>  hm2_5i23.0.encoder.05.index-enable

# ---setup spindle control signals---

net spindle-vel-cmd-rps        <=  spindle.0.speed-out-rps
net spindle-vel-cmd-rps-abs    <=  spindle.0.speed-out-rps-abs
net spindle-vel-cmd            <=  spindle.0.speed-out
net spindle-vel-cmd-rpm-abs    <=  spindle.0.speed-out-abs
net spindle-on                 <=  spindle.0.on
net spindle-cw                 <=  spindle.0.forward
net spindle-ccw                <=  spindle.0.reverse
net spindle-brake              <=  spindle.0.brake
net spindle-revs               =>  spindle.0.revs
net spindle-at-speed           =>  spindle.0.at-speed
net spindle-vel-fb             =>  spindle.0.speed-in
net spindle-index-enable      <=>  spindle.0.index-enable

# ---Setup spindle at speed signals---

sets spindle-at-speed true

#  Use ACTUAL spindle velocity from spindle encoder
#  spindle-velocity bounces around so we filter it with lowpass
#  spindle-velocity is signed so we use absolute component to remove sign
#  ACTUAL velocity is in RPS not RPM so we scale it.

setp     scale.spindle.gain 60
setp     lowpass.spindle.gain 1.000000
net spindle-vel-fb        =>   lowpass.spindle.in
net spindle-fb-filtered-rps    lowpass.spindle.out      =>   abs.spindle.in
net spindle-fb-filtered-abs-rps    abs.spindle.out      =>   scale.spindle.in
net spindle-fb-filtered-abs-rpm    scale.spindle.out

#******************************
# connect miscellaneous signals
#******************************

#  ---HALUI signals---

net joint-select-a        halui.axis.x.select
net x-is-homed            halui.joint.0.is-homed
net jog-x-pos             halui.axis.x.plus
net jog-x-neg             halui.axis.x.minus
net jog-x-analog          halui.axis.x.analog
net joint-select-b        halui.axis.y.select
net y-is-homed            halui.joint.1.is-homed
net jog-y-pos             halui.axis.y.plus
net jog-y-neg             halui.axis.y.minus
net jog-y-analog          halui.axis.y.analog
net joint-select-c        halui.axis.z.select
net z-is-homed            halui.joint.2.is-homed
net jog-z-pos             halui.axis.z.plus
net jog-z-neg             halui.axis.z.minus
net jog-z-analog          halui.axis.z.analog
net jog-selected-pos      halui.axis.selected.plus
net jog-selected-neg      halui.axis.selected.minus
net spindle-manual-cw     halui.spindle.0.forward
net spindle-manual-ccw    halui.spindle.0.reverse
net spindle-manual-stop   halui.spindle.0.stop
net machine-is-on         halui.machine.is-on
#net jog-speed             halui.axis.jog-speed 
net MDI-mode              halui.mode.is-mdi

#  ---coolant signals---

net coolant-mist      <=  iocontrol.0.coolant-mist
net coolant-flood     <=  iocontrol.0.coolant-flood

#  ---probe signal---

net probe-in     =>  motion.probe-input

# ---jog button signals - MPG---

#sets    jog-speed 1.000000

# ---jogwheel signals to mesa encoder - shared MPG---

net joint-selected-count     <=  hm2_5i23.0.encoder.06.count

#  ---mpg signals---

#--- selected-jog-incr (comes from postgui hal FRO analogue input)---

#       for axis x MPG
setp joint.0.jog-vel-mode 0
setp axis.x.jog-vel-mode 0

net selected-jog-incr    =>  joint.0.jog-scale axis.x.jog-scale
net joint-select-a       =>  axis.x.jog-enable
net joint-selected-count =>  joint.0.jog-counts axis.x.jog-counts

#       for axis y MPG
setp joint.1.jog-vel-mode 0
setp axis.y.jog-vel-mode 0

net selected-jog-incr    =>  joint.1.jog-scale axis.y.jog-scale
net joint-select-b       =>  axis.y.jog-enable
net joint-selected-count =>  joint.1.jog-counts axis.y.jog-counts

#       for axis z MPG
setp joint.2.jog-vel-mode 0
setp axis.z.jog-vel-mode 0

net selected-jog-incr    =>  joint.2.jog-scale axis.z.jog-scale
net joint-select-c       =>  axis.z.jog-enable
net joint-selected-count =>  joint.2.jog-counts axis.z.jog-counts





#  ---motion control signals---

net in-position               <=  motion.in-position
net machine-is-enabled        <=  motion.motion-enabled

#  ---digital in / out signals---

#net dout-00     <=  motion.digital-out-00

#  ---estop signals---

#net estop-out     <=  iocontrol.0.user-enable-out
#net estop-ext     =>  iocontrol.0.emc-enable-in

#  ---manual tool change signals---

loadusr -W hal_manualtoolchange
net tool-change-request     iocontrol.0.tool-change       =>  hal_manualtoolchange.change
net tool-change-confirmed   iocontrol.0.tool-changed      <=  hal_manualtoolchange.changed
net tool-number             iocontrol.0.tool-prep-number  =>  hal_manualtoolchange.number
net tool-prepare-loopback   iocontrol.0.tool-prepare      =>  iocontrol.0.tool-prepared


