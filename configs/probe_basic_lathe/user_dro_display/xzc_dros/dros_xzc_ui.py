# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file '/home/buildbot/buildbot/worker/probe_basic-dev/sources/debian/python3-probe-basic/usr/share/configs/probe_basic_lathe/user_dro_display/xzc_dros/dros_xzc.ui'
#
# Created by: PyQt5 UI code generator 5.15.9
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_dros_xzc(object):
    def setupUi(self, dros_xzc):
        dros_xzc.setObjectName("dros_xzc")
        dros_xzc.resize(479, 254)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(dros_xzc.sizePolicy().hasHeightForWidth())
        dros_xzc.setSizePolicy(sizePolicy)
        dros_xzc.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.verticalLayout = QtWidgets.QVBoxLayout(dros_xzc)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setSpacing(0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.widget_xz = QtWidgets.QWidget(dros_xzc)
        self.widget_xz.setObjectName("widget_xz")
        self.verticalLayout_55 = QtWidgets.QVBoxLayout(self.widget_xz)
        self.verticalLayout_55.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout_55.setSpacing(19)
        self.verticalLayout_55.setObjectName("verticalLayout_55")
        self.widget_87 = QtWidgets.QWidget(self.widget_xz)
        self.widget_87.setMinimumSize(QtCore.QSize(0, 42))
        self.widget_87.setObjectName("widget_87")
        self.horizontalLayout_79 = QtWidgets.QHBoxLayout(self.widget_87)
        self.horizontalLayout_79.setContentsMargins(0, 0, 0, 0)
        self.horizontalLayout_79.setObjectName("horizontalLayout_79")
        self.zero_all_button = MDIButton(self.widget_87)
        self.zero_all_button.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.zero_all_button.sizePolicy().hasHeightForWidth())
        self.zero_all_button.setSizePolicy(sizePolicy)
        self.zero_all_button.setMinimumSize(QtCore.QSize(60, 40))
        self.zero_all_button.setMaximumSize(QtCore.QSize(60, 40))
        self.zero_all_button.setFocusPolicy(QtCore.Qt.NoFocus)
        self.zero_all_button.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.zero_all_button.setStyleSheet("MDIButton {\n"
"       font: 14pt \"Bebas Kai\";\n"
"}")
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/images/zero.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.zero_all_button.setIcon(icon)
        self.zero_all_button.setIconSize(QtCore.QSize(20, 20))
        self.zero_all_button.setObjectName("zero_all_button")
        self.horizontalLayout_79.addWidget(self.zero_all_button)
        self.frame_53 = QtWidgets.QFrame(self.widget_87)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.frame_53.sizePolicy().hasHeightForWidth())
        self.frame_53.setSizePolicy(sizePolicy)
        self.frame_53.setMinimumSize(QtCore.QSize(0, 40))
        self.frame_53.setMaximumSize(QtCore.QSize(16777215, 40))
        self.frame_53.setStyleSheet(".QFrame{\n"
"    border-style: solid;\n"
"    border-color: rgb(176, 179,172);\n"
"    border-width: 1px;\n"
"    border-radius: 4px;\n"
"    background-color: rgb(90, 90, 90);\n"
"    padding: -5px;\n"
"}")
        self.frame_53.setFrameShape(QtWidgets.QFrame.StyledPanel)
        self.frame_53.setFrameShadow(QtWidgets.QFrame.Raised)
        self.frame_53.setObjectName("frame_53")
        self.horizontalLayout_168 = QtWidgets.QHBoxLayout(self.frame_53)
        self.horizontalLayout_168.setContentsMargins(9, -1, 0, -1)
        self.horizontalLayout_168.setSpacing(18)
        self.horizontalLayout_168.setObjectName("horizontalLayout_168")
        self.work_column_header = StatusLabel(self.frame_53)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.work_column_header.sizePolicy().hasHeightForWidth())
        self.work_column_header.setSizePolicy(sizePolicy)
        self.work_column_header.setMinimumSize(QtCore.QSize(100, 17))
        self.work_column_header.setMaximumSize(QtCore.QSize(100, 17))
        self.work_column_header.setStyleSheet("QLabel{\n"
"    color: rgb(238, 238, 236);\n"
"    font: 16pt \"Bebas Kai\";\n"
"    padding-left: 6px;\n"
"}")
        self.work_column_header.setAlignment(QtCore.Qt.AlignCenter)
        self.work_column_header.setObjectName("work_column_header")
        self.horizontalLayout_168.addWidget(self.work_column_header)
        self.machine_column_header = QtWidgets.QLabel(self.frame_53)
        self.machine_column_header.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.machine_column_header.sizePolicy().hasHeightForWidth())
        self.machine_column_header.setSizePolicy(sizePolicy)
        self.machine_column_header.setMinimumSize(QtCore.QSize(100, 17))
        self.machine_column_header.setMaximumSize(QtCore.QSize(100, 17))
        self.machine_column_header.setStyleSheet("QLabel{\n"
"    color: rgb(238, 238, 236);\n"
"    font: 16pt \"Bebas Kai\";\n"
"}")
        self.machine_column_header.setAlignment(QtCore.Qt.AlignCenter)
        self.machine_column_header.setObjectName("machine_column_header")
        self.horizontalLayout_168.addWidget(self.machine_column_header)
        self.dtg_column_header = QtWidgets.QLabel(self.frame_53)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dtg_column_header.sizePolicy().hasHeightForWidth())
        self.dtg_column_header.setSizePolicy(sizePolicy)
        self.dtg_column_header.setMinimumSize(QtCore.QSize(100, 17))
        self.dtg_column_header.setMaximumSize(QtCore.QSize(100, 17))
        self.dtg_column_header.setStyleSheet("QLabel{\n"
"    color: rgb(238, 238, 236);\n"
"    font: 16pt \"Bebas Kai\";\n"
"}")
        self.dtg_column_header.setAlignment(QtCore.Qt.AlignCenter)
        self.dtg_column_header.setObjectName("dtg_column_header")
        self.horizontalLayout_168.addWidget(self.dtg_column_header)
        self.horizontalLayout_79.addWidget(self.frame_53)
        self.ref_all_button = ActionButton(self.widget_87)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ref_all_button.sizePolicy().hasHeightForWidth())
        self.ref_all_button.setSizePolicy(sizePolicy)
        self.ref_all_button.setMinimumSize(QtCore.QSize(62, 40))
        self.ref_all_button.setMaximumSize(QtCore.QSize(62, 40))
        self.ref_all_button.setFocusPolicy(QtCore.Qt.NoFocus)
        self.ref_all_button.setStyleSheet("QPushButton {\n"
"       font: 15pt \"Bebas Kai\";\n"
"}")
        self.ref_all_button.setObjectName("ref_all_button")
        self.horizontalLayout_79.addWidget(self.ref_all_button)
        self.verticalLayout_55.addWidget(self.widget_87)
        self.widget_88 = QtWidgets.QWidget(self.widget_xz)
        self.widget_88.setMinimumSize(QtCore.QSize(0, 42))
        self.widget_88.setObjectName("widget_88")
        self.x_axis_dro_layout_3 = QtWidgets.QHBoxLayout(self.widget_88)
        self.x_axis_dro_layout_3.setContentsMargins(0, 2, 0, 2)
        self.x_axis_dro_layout_3.setSpacing(8)
        self.x_axis_dro_layout_3.setObjectName("x_axis_dro_layout_3")
        self.zero_x_button = MDIButton(self.widget_88)
        self.zero_x_button.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.zero_x_button.sizePolicy().hasHeightForWidth())
        self.zero_x_button.setSizePolicy(sizePolicy)
        self.zero_x_button.setMinimumSize(QtCore.QSize(60, 40))
        self.zero_x_button.setMaximumSize(QtCore.QSize(60, 40))
        self.zero_x_button.setLayoutDirection(QtCore.Qt.LeftToRight)
        self.zero_x_button.setStyleSheet("MDIButton {\n"
"       font: 16pt \"Bebas Kai\";\n"
"}")
        self.zero_x_button.setIconSize(QtCore.QSize(20, 20))
        self.zero_x_button.setObjectName("zero_x_button")
        self.x_axis_dro_layout_3.addWidget(self.zero_x_button)
        self.dro_entry_x_main = DROLineEdit(self.widget_88)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dro_entry_x_main.sizePolicy().hasHeightForWidth())
        self.dro_entry_x_main.setSizePolicy(sizePolicy)
        self.dro_entry_x_main.setMinimumSize(QtCore.QSize(100, 35))
        self.dro_entry_x_main.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.dro_entry_x_main.setStyleSheet("DROLineEdit{\n"
"    border-style: transparant;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    padding-right: 2px;\n"
"    font: 17pt \"Bebas Kai\";\n"
"}")
        self.dro_entry_x_main.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.dro_entry_x_main.setProperty("referenceType", 1)
        self.dro_entry_x_main.setProperty("axisNumber", 0)
        self.dro_entry_x_main.setProperty("latheMode", 0)
        self.dro_entry_x_main.setObjectName("dro_entry_x_main")
        self.x_axis_dro_layout_3.addWidget(self.dro_entry_x_main)
        self.drolabel_machine_x = DROLabel(self.widget_88)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.drolabel_machine_x.sizePolicy().hasHeightForWidth())
        self.drolabel_machine_x.setSizePolicy(sizePolicy)
        self.drolabel_machine_x.setMinimumSize(QtCore.QSize(100, 35))
        self.drolabel_machine_x.setStyleSheet("QLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt;\n"
"    padding-right: 2px;\n"
"    font: 17pt \"Bebas Kai\";\n"
"}\n"
"\n"
"QLabel[style=\"unhomed\"]{\n"
"   color: red;\n"
"}\n"
"\n"
"QLabel[style=\"homing\"]{\n"
"   color: rgb(196, 160, 0);\n"
"}")
        self.drolabel_machine_x.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.drolabel_machine_x.setProperty("referenceType", 0)
        self.drolabel_machine_x.setProperty("axisNumber", 0)
        self.drolabel_machine_x.setProperty("latheMode", 0)
        self.drolabel_machine_x.setObjectName("drolabel_machine_x")
        self.x_axis_dro_layout_3.addWidget(self.drolabel_machine_x)
        self.dro_dtg_x = DROLabel(self.widget_88)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dro_dtg_x.sizePolicy().hasHeightForWidth())
        self.dro_dtg_x.setSizePolicy(sizePolicy)
        self.dro_dtg_x.setMinimumSize(QtCore.QSize(100, 35))
        self.dro_dtg_x.setStyleSheet("DROLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt;\n"
"    padding-right: 2px;\n"
"    font: 17pt \"Bebas Kai\";\n"
"}\n"
"\n"
"DROLabel[style=\"unhomed\"]{\n"
"   color: red;\n"
"}\n"
"\n"
"DROLabel[style=\"homing\"]{\n"
"   color: rgb(196, 160, 0);\n"
"}")
        self.dro_dtg_x.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.dro_dtg_x.setProperty("referenceType", 2)
        self.dro_dtg_x.setProperty("axisNumber", 0)
        self.dro_dtg_x.setProperty("latheMode", 0)
        self.dro_dtg_x.setObjectName("dro_dtg_x")
        self.x_axis_dro_layout_3.addWidget(self.dro_dtg_x)
        self.ref_x_button = ActionButton(self.widget_88)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ref_x_button.sizePolicy().hasHeightForWidth())
        self.ref_x_button.setSizePolicy(sizePolicy)
        self.ref_x_button.setMinimumSize(QtCore.QSize(60, 40))
        self.ref_x_button.setMaximumSize(QtCore.QSize(60, 40))
        self.ref_x_button.setStyleSheet("QPushButton {\n"
"       font: 15pt \"Bebas Kai\";\n"
"}")
        self.ref_x_button.setObjectName("ref_x_button")
        self.x_axis_dro_layout_3.addWidget(self.ref_x_button)
        self.verticalLayout_55.addWidget(self.widget_88)
        self.widget_89 = QtWidgets.QWidget(self.widget_xz)
        self.widget_89.setMinimumSize(QtCore.QSize(0, 42))
        self.widget_89.setObjectName("widget_89")
        self.z_axis_dro_layout_6 = QtWidgets.QHBoxLayout(self.widget_89)
        self.z_axis_dro_layout_6.setContentsMargins(0, 2, 0, 2)
        self.z_axis_dro_layout_6.setSpacing(8)
        self.z_axis_dro_layout_6.setObjectName("z_axis_dro_layout_6")
        self.zero_z_button = MDIButton(self.widget_89)
        self.zero_z_button.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.zero_z_button.sizePolicy().hasHeightForWidth())
        self.zero_z_button.setSizePolicy(sizePolicy)
        self.zero_z_button.setMinimumSize(QtCore.QSize(60, 40))
        self.zero_z_button.setMaximumSize(QtCore.QSize(60, 40))
        self.zero_z_button.setStyleSheet("MDIButton {\n"
"       font: 17pt \"Bebas Kai\";\n"
"}")
        self.zero_z_button.setIcon(icon)
        self.zero_z_button.setIconSize(QtCore.QSize(20, 20))
        self.zero_z_button.setObjectName("zero_z_button")
        self.z_axis_dro_layout_6.addWidget(self.zero_z_button)
        self.dro_entry_z_main = DROLineEdit(self.widget_89)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dro_entry_z_main.sizePolicy().hasHeightForWidth())
        self.dro_entry_z_main.setSizePolicy(sizePolicy)
        self.dro_entry_z_main.setMinimumSize(QtCore.QSize(100, 35))
        self.dro_entry_z_main.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.dro_entry_z_main.setStyleSheet("DROLineEdit{\n"
"    border-style: transparant;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    padding-right: 2px;\n"
"    font: 17pt \"Bebas Kai\";\n"
"}")
        self.dro_entry_z_main.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.dro_entry_z_main.setProperty("referenceType", 1)
        self.dro_entry_z_main.setProperty("axisNumber", 2)
        self.dro_entry_z_main.setProperty("latheMode", 0)
        self.dro_entry_z_main.setObjectName("dro_entry_z_main")
        self.z_axis_dro_layout_6.addWidget(self.dro_entry_z_main)
        self.drolabel_machine_z = DROLabel(self.widget_89)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.drolabel_machine_z.sizePolicy().hasHeightForWidth())
        self.drolabel_machine_z.setSizePolicy(sizePolicy)
        self.drolabel_machine_z.setMinimumSize(QtCore.QSize(100, 35))
        self.drolabel_machine_z.setStyleSheet("QLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt;\n"
"    padding-right: 2px;\n"
"    font: 17pt \"Bebas Kai\";\n"
"}\n"
"\n"
"QLabel[style=\"unhomed\"]{\n"
"   color: red;\n"
"}\n"
"\n"
"QLabel[style=\"homing\"]{\n"
"   color: rgb(196, 160, 0);\n"
"}")
        self.drolabel_machine_z.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.drolabel_machine_z.setProperty("referenceType", 0)
        self.drolabel_machine_z.setProperty("axisNumber", 2)
        self.drolabel_machine_z.setProperty("latheMode", 0)
        self.drolabel_machine_z.setObjectName("drolabel_machine_z")
        self.z_axis_dro_layout_6.addWidget(self.drolabel_machine_z)
        self.dro_dtg_z = DROLabel(self.widget_89)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dro_dtg_z.sizePolicy().hasHeightForWidth())
        self.dro_dtg_z.setSizePolicy(sizePolicy)
        self.dro_dtg_z.setMinimumSize(QtCore.QSize(100, 35))
        self.dro_dtg_z.setStyleSheet("DROLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt;\n"
"    padding-right: 2px;\n"
"    font: 17pt \"Bebas Kai\";\n"
"}\n"
"\n"
"DROLabel[style=\"unhomed\"]{\n"
"   color: red;\n"
"}\n"
"\n"
"DROLabel[style=\"homing\"]{\n"
"   color: rgb(196, 160, 0);\n"
"}")
        self.dro_dtg_z.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.dro_dtg_z.setProperty("referenceType", 2)
        self.dro_dtg_z.setProperty("axisNumber", 2)
        self.dro_dtg_z.setProperty("latheMode", 0)
        self.dro_dtg_z.setObjectName("dro_dtg_z")
        self.z_axis_dro_layout_6.addWidget(self.dro_dtg_z)
        self.ref_z_button = ActionButton(self.widget_89)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ref_z_button.sizePolicy().hasHeightForWidth())
        self.ref_z_button.setSizePolicy(sizePolicy)
        self.ref_z_button.setMinimumSize(QtCore.QSize(60, 40))
        self.ref_z_button.setMaximumSize(QtCore.QSize(60, 40))
        self.ref_z_button.setStyleSheet("QPushButton {\n"
"       font: 15pt \"Bebas Kai\";\n"
"}")
        self.ref_z_button.setObjectName("ref_z_button")
        self.z_axis_dro_layout_6.addWidget(self.ref_z_button)
        self.verticalLayout_55.addWidget(self.widget_89)
        self.widget_93 = QtWidgets.QWidget(self.widget_xz)
        self.widget_93.setMinimumSize(QtCore.QSize(0, 42))
        self.widget_93.setObjectName("widget_93")
        self.z_axis_dro_layout_10 = QtWidgets.QHBoxLayout(self.widget_93)
        self.z_axis_dro_layout_10.setContentsMargins(0, 2, 0, 2)
        self.z_axis_dro_layout_10.setSpacing(8)
        self.z_axis_dro_layout_10.setObjectName("z_axis_dro_layout_10")
        self.zero_c_button = MDIButton(self.widget_93)
        self.zero_c_button.setEnabled(False)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Preferred)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.zero_c_button.sizePolicy().hasHeightForWidth())
        self.zero_c_button.setSizePolicy(sizePolicy)
        self.zero_c_button.setMinimumSize(QtCore.QSize(60, 40))
        self.zero_c_button.setMaximumSize(QtCore.QSize(60, 40))
        self.zero_c_button.setStyleSheet("MDIButton {\n"
"       font: 17pt \"Bebas Kai\";\n"
"}")
        self.zero_c_button.setIcon(icon)
        self.zero_c_button.setIconSize(QtCore.QSize(20, 20))
        self.zero_c_button.setObjectName("zero_c_button")
        self.z_axis_dro_layout_10.addWidget(self.zero_c_button)
        self.dro_entry_c_main = DROLineEdit(self.widget_93)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dro_entry_c_main.sizePolicy().hasHeightForWidth())
        self.dro_entry_c_main.setSizePolicy(sizePolicy)
        self.dro_entry_c_main.setMinimumSize(QtCore.QSize(100, 35))
        self.dro_entry_c_main.setFocusPolicy(QtCore.Qt.ClickFocus)
        self.dro_entry_c_main.setStyleSheet("DROLineEdit{\n"
"    border-style: transparant;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    padding-right: 2px;\n"
"    font: 17pt \"Bebas Kai\";\n"
"}")
        self.dro_entry_c_main.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.dro_entry_c_main.setProperty("referenceType", 1)
        self.dro_entry_c_main.setProperty("axisNumber", 5)
        self.dro_entry_c_main.setProperty("latheMode", 0)
        self.dro_entry_c_main.setObjectName("dro_entry_c_main")
        self.z_axis_dro_layout_10.addWidget(self.dro_entry_c_main)
        self.drolabel_machine_c = DROLabel(self.widget_93)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.drolabel_machine_c.sizePolicy().hasHeightForWidth())
        self.drolabel_machine_c.setSizePolicy(sizePolicy)
        self.drolabel_machine_c.setMinimumSize(QtCore.QSize(100, 35))
        self.drolabel_machine_c.setStyleSheet("QLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt;\n"
"    padding-right: 2px;\n"
"    font: 17pt \"Bebas Kai\";\n"
"}\n"
"\n"
"QLabel[style=\"unhomed\"]{\n"
"   color: red;\n"
"}\n"
"\n"
"QLabel[style=\"homing\"]{\n"
"   color: rgb(196, 160, 0);\n"
"}")
        self.drolabel_machine_c.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.drolabel_machine_c.setProperty("referenceType", 0)
        self.drolabel_machine_c.setProperty("axisNumber", 5)
        self.drolabel_machine_c.setProperty("latheMode", 0)
        self.drolabel_machine_c.setObjectName("drolabel_machine_c")
        self.z_axis_dro_layout_10.addWidget(self.drolabel_machine_c)
        self.dro_dtg_c = DROLabel(self.widget_93)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Preferred, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(1)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.dro_dtg_c.sizePolicy().hasHeightForWidth())
        self.dro_dtg_c.setSizePolicy(sizePolicy)
        self.dro_dtg_c.setMinimumSize(QtCore.QSize(100, 35))
        self.dro_dtg_c.setStyleSheet("DROLabel{\n"
"    border-style: transparent;\n"
"    border-color: rgb(235, 235, 235);\n"
"    border-width: 1px;\n"
"    border-radius: 5px;\n"
"    color: black;\n"
"    background: rgb(235, 235, 235);\n"
"    font: 17pt;\n"
"    padding-right: 2px;\n"
"    font: 17pt \"Bebas Kai\";\n"
"}\n"
"\n"
"DROLabel[style=\"unhomed\"]{\n"
"   color: red;\n"
"}\n"
"\n"
"DROLabel[style=\"homing\"]{\n"
"   color: rgb(196, 160, 0);\n"
"}")
        self.dro_dtg_c.setAlignment(QtCore.Qt.AlignRight|QtCore.Qt.AlignTrailing|QtCore.Qt.AlignVCenter)
        self.dro_dtg_c.setProperty("referenceType", 2)
        self.dro_dtg_c.setProperty("axisNumber", 5)
        self.dro_dtg_c.setProperty("latheMode", 0)
        self.dro_dtg_c.setObjectName("dro_dtg_c")
        self.z_axis_dro_layout_10.addWidget(self.dro_dtg_c)
        self.ref_c_button = ActionButton(self.widget_93)
        sizePolicy = QtWidgets.QSizePolicy(QtWidgets.QSizePolicy.Fixed, QtWidgets.QSizePolicy.Fixed)
        sizePolicy.setHorizontalStretch(0)
        sizePolicy.setVerticalStretch(0)
        sizePolicy.setHeightForWidth(self.ref_c_button.sizePolicy().hasHeightForWidth())
        self.ref_c_button.setSizePolicy(sizePolicy)
        self.ref_c_button.setMinimumSize(QtCore.QSize(60, 40))
        self.ref_c_button.setMaximumSize(QtCore.QSize(60, 40))
        self.ref_c_button.setStyleSheet("QPushButton {\n"
"       font: 15pt \"Bebas Kai\";\n"
"}")
        self.ref_c_button.setObjectName("ref_c_button")
        self.z_axis_dro_layout_10.addWidget(self.ref_c_button)
        self.verticalLayout_55.addWidget(self.widget_93)
        self.widget = QtWidgets.QWidget(self.widget_xz)
        self.widget.setObjectName("widget")
        self.verticalLayout_55.addWidget(self.widget)
        self.verticalLayout.addWidget(self.widget_xz)

        self.retranslateUi(dros_xzc)
        QtCore.QMetaObject.connectSlotsByName(dros_xzc)

    def retranslateUi(self, dros_xzc):
        _translate = QtCore.QCoreApplication.translate
        dros_xzc.setWindowTitle(_translate("dros_xzc", "dros_xzc"))
        self.zero_all_button.setText(_translate("dros_xzc", "ALL"))
        self.zero_all_button.setProperty("rules", _translate("dros_xzc", "[\n"
"    {\n"
"        \"channels\": [\n"
"            {\n"
"                \"url\": \"status:g5x_index\",\n"
"                \"trigger\": true,\n"
"                \"type\": \"int\"\n"
"            }\n"
"        ],\n"
"        \"expression\": \"\",\n"
"        \"name\": \"G5x Index\",\n"
"        \"property\": \"None\"\n"
"    }\n"
"]"))
        self.zero_all_button.setProperty("MDICommand", _translate("dros_xzc", "G10 L20 P{ch[0]} X0.0 Z0.0"))
        self.work_column_header.setProperty("rules", _translate("dros_xzc", "[{\"channels\": [{\"url\": \"status:g5x_index?text\", \"trigger\": true}], \"property\": \"Text\", \"expression\": \"ch[0] + \' WORK\'\\n\", \"name\": \"WCS Header\"}]"))
        self.machine_column_header.setText(_translate("dros_xzc", "MACHINE"))
        self.dtg_column_header.setText(_translate("dros_xzc", "DTG"))
        self.ref_all_button.setText(_translate("dros_xzc", "REF ALL"))
        self.ref_all_button.setProperty("rules", _translate("dros_xzc", "[{\"channels\": [{\"url\": \"status:all_axes_homed\", \"trigger\": true}], \"property\": \"Text\", \"expression\": \"\'HOMED\' if ch[0] else \'REF ALL\'\", \"name\": \"reference_all\"}, {\"name\": \"home_inhibit\", \"property\": \"Enable\", \"expression\": \"not (ch[0] or ch[1] or ch[2])\", \"channels\": [{\"url\": \"status:joint.0.homing\", \"trigger\": true}, {\"url\": \"status:joint.1.homing\", \"trigger\": true}, {\"url\": \"status:joint.2.homing\", \"trigger\": true}]}]"))
        self.ref_all_button.setProperty("actionName", _translate("dros_xzc", "machine.home.all"))
        self.zero_x_button.setText(_translate("dros_xzc", "X RAD"))
        self.zero_x_button.setProperty("rules", _translate("dros_xzc", "[{\"channels\": [{\"url\": \"status:g5x_index\", \"trigger\": true, \"type\": \"int\"}], \"property\": \"None\", \"expression\": \"\", \"name\": \"G5x Index\"}, {\"channels\": [{\"url\": \"status:gcodes\", \"trigger\": true}], \"property\": \"Text\", \"expression\": \"\'X DIA\' if \'G7\' in ch[0] else \'X RAD\'\", \"name\": \"diam_rad_mode_display\"}]"))
        self.zero_x_button.setProperty("MDICommand", _translate("dros_xzc", "G10 L20 P{ch[0]} X0.0"))
        self.dro_entry_x_main.setProperty("inchFormat", _translate("dros_xzc", "%9.4f"))
        self.dro_entry_x_main.setProperty("millimeterFormat", _translate("dros_xzc", "%10.3f"))
        self.dro_entry_x_main.setProperty("degreeFormat", _translate("dros_xzc", "%10.2f"))
        self.drolabel_machine_x.setProperty("inchFormat", _translate("dros_xzc", "%9.4f"))
        self.drolabel_machine_x.setProperty("millimeterFormat", _translate("dros_xzc", "%10.3f"))
        self.drolabel_machine_x.setProperty("degreeFormat", _translate("dros_xzc", "%10.2f"))
        self.dro_dtg_x.setProperty("inchFormat", _translate("dros_xzc", "%9.4f"))
        self.dro_dtg_x.setProperty("millimeterFormat", _translate("dros_xzc", "%10.3f"))
        self.dro_dtg_x.setProperty("degreeFormat", _translate("dros_xzc", "%10.2f"))
        self.ref_x_button.setText(_translate("dros_xzc", "REF X"))
        self.ref_x_button.setProperty("rules", _translate("dros_xzc", "[{\"name\": \"home_inhibit\", \"property\": \"Enable\", \"expression\": \"not (ch[0] or ch[1] or ch[2])\", \"channels\": [{\"url\": \"status:joint.0.homing\", \"trigger\": true}, {\"url\": \"status:joint.1.homing\", \"trigger\": true}, {\"url\": \"status:joint.3.homing\", \"trigger\": true}]}]"))
        self.ref_x_button.setProperty("actionName", _translate("dros_xzc", "machine.home.axis:x"))
        self.zero_z_button.setText(_translate("dros_xzc", "Z"))
        self.zero_z_button.setProperty("rules", _translate("dros_xzc", "[\n"
"    {\n"
"        \"channels\": [\n"
"            {\n"
"                \"url\": \"status:g5x_index\",\n"
"                \"trigger\": true,\n"
"                \"type\": \"int\"\n"
"            }\n"
"        ],\n"
"        \"expression\": \"\",\n"
"        \"name\": \"G5x Index\",\n"
"        \"property\": \"None\"\n"
"    }\n"
"]"))
        self.zero_z_button.setProperty("MDICommand", _translate("dros_xzc", "G10 L20 P{ch[0]} Z0.0"))
        self.dro_entry_z_main.setProperty("inchFormat", _translate("dros_xzc", "%9.4f"))
        self.dro_entry_z_main.setProperty("millimeterFormat", _translate("dros_xzc", "%10.3f"))
        self.dro_entry_z_main.setProperty("degreeFormat", _translate("dros_xzc", "%10.2f"))
        self.drolabel_machine_z.setProperty("inchFormat", _translate("dros_xzc", "%9.4f"))
        self.drolabel_machine_z.setProperty("millimeterFormat", _translate("dros_xzc", "%10.3f"))
        self.drolabel_machine_z.setProperty("degreeFormat", _translate("dros_xzc", "%10.2f"))
        self.dro_dtg_z.setProperty("inchFormat", _translate("dros_xzc", "%9.4f"))
        self.dro_dtg_z.setProperty("millimeterFormat", _translate("dros_xzc", "%10.3f"))
        self.dro_dtg_z.setProperty("degreeFormat", _translate("dros_xzc", "%10.2f"))
        self.ref_z_button.setText(_translate("dros_xzc", "REF Z"))
        self.ref_z_button.setProperty("rules", _translate("dros_xzc", "[{\"name\": \"home_inhibit\", \"property\": \"Enable\", \"expression\": \"not (ch[0] or ch[1])\", \"channels\": [{\"url\": \"status:joint.0.homing\", \"trigger\": true}, {\"url\": \"status:joint.1.homing\", \"trigger\": true}, {\"url\": \"status:joint.2.homing\", \"trigger\": true}]}]"))
        self.ref_z_button.setProperty("actionName", _translate("dros_xzc", "machine.home.axis:z"))
        self.zero_c_button.setText(_translate("dros_xzc", "C"))
        self.zero_c_button.setProperty("rules", _translate("dros_xzc", "[\n"
"    {\n"
"        \"channels\": [\n"
"            {\n"
"                \"url\": \"status:g5x_index\",\n"
"                \"trigger\": true,\n"
"                \"type\": \"int\"\n"
"            }\n"
"        ],\n"
"        \"expression\": \"\",\n"
"        \"name\": \"G5x Index\",\n"
"        \"property\": \"None\"\n"
"    }\n"
"]"))
        self.zero_c_button.setProperty("MDICommand", _translate("dros_xzc", "G10 L20 P{ch[0]} C0.0"))
        self.dro_entry_c_main.setProperty("inchFormat", _translate("dros_xzc", "%9.4f"))
        self.dro_entry_c_main.setProperty("millimeterFormat", _translate("dros_xzc", "%10.3f"))
        self.dro_entry_c_main.setProperty("degreeFormat", _translate("dros_xzc", "%10.2f"))
        self.drolabel_machine_c.setProperty("inchFormat", _translate("dros_xzc", "%9.4f"))
        self.drolabel_machine_c.setProperty("millimeterFormat", _translate("dros_xzc", "%10.3f"))
        self.drolabel_machine_c.setProperty("degreeFormat", _translate("dros_xzc", "%10.2f"))
        self.dro_dtg_c.setProperty("inchFormat", _translate("dros_xzc", "%9.4f"))
        self.dro_dtg_c.setProperty("millimeterFormat", _translate("dros_xzc", "%10.3f"))
        self.dro_dtg_c.setProperty("degreeFormat", _translate("dros_xzc", "%10.2f"))
        self.ref_c_button.setText(_translate("dros_xzc", "REF C"))
        self.ref_c_button.setProperty("rules", _translate("dros_xzc", "[{\"name\": \"home_inhibit\", \"property\": \"Enable\", \"expression\": \"not (ch[0] or ch[1] or ch[2])\", \"channels\": [{\"url\": \"status:joint.0.homing\", \"trigger\": true}, {\"url\": \"status:joint.1.homing\", \"trigger\": true}, {\"url\": \"status:joint.2.homing\", \"trigger\": true}]}]"))
        self.ref_c_button.setProperty("actionName", _translate("dros_xzc", "machine.home.axis:c"))
from qtpyvcp.widgets.button_widgets.action_button import ActionButton
from qtpyvcp.widgets.button_widgets.mdi_button import MDIButton
from qtpyvcp.widgets.display_widgets.dro_label import DROLabel
from qtpyvcp.widgets.display_widgets.status_label import StatusLabel
from qtpyvcp.widgets.input_widgets.dro_line_edit import DROLineEdit
import probe_basic_lathe_rc
import probe_basic_rc
