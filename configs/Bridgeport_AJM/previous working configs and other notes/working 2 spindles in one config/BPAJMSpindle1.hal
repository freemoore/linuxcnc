# made by ajm, 08/10/2024 for updating to true dual spindle control 
# keep all spindle related hal entries in one place, it's going to get confusing otherwise. 

loadrt scale names=scale.spindle1
loadrt near names=spindle1-near-speed
loadrt pid names=pid.s1
loadrt abs names=abs.spindle1
loadrt lowpass names=lowpass.spindle1

addf spindle1-near-speed 		servo-thread
addf scale.spindle1		  		servo-thread
addf lowpass.spindle1          	servo-thread
addf pid.s1.do-pid-calcs       	servo-thread
addf abs.spindle1             	servo-thread

setp spindle1-near-speed.difference 6000
setp spindle1-near-speed.scale 2

### spindle 1: High-speed spindle1 connections
net spindle1-cw  			=>		[HMOT](CARD0).7i84.0.0.output-11
#net spindle1-ccw  			=>		[HMOT](CARD0).7i84.0.0.output-09 
# --- HIGH SPEED spindle0 0-10V OUTPUT ---
net hss-10v-in 				<=		[HMOT](CARD0).7i84.0.0.analogin3


setp   pid.s1.Pgain     [SPINDLE_1]P
setp   pid.s1.Igain     [SPINDLE_1]I
setp   pid.s1.Dgain     [SPINDLE_1]D
setp   pid.s1.bias      [SPINDLE_1]BIAS
setp   pid.s1.FF0       [SPINDLE_1]FF0
setp   pid.s1.FF1       [SPINDLE_1]FF1
setp   pid.s1.FF2       [SPINDLE_1]FF2
setp   pid.s1.deadband  [SPINDLE_1]DEADBAND
setp   pid.s1.maxoutput [SPINDLE_1]MAX_OUTPUT
setp   pid.s1.error-previous-target true

net spindle1-index-enable  		=>  pid.s1.index-enable
net spindle1-enable        		=>  pid.s1.enable
net spindle1-vel-cmd-rpm-abs    => pid.s1.command
net spindle1-vel-fb-rpm-abs     => pid.s1.feedback
net spindle1-output        		<=  pid.s1.output

# ---PWM Generator signals/setup---

###spindle1
setp   [HMOT](CARD0).pwmgen.05.output-type 2
setp   [HMOT](CARD0).pwmgen.05.scale [SPINDLE_1]OUTPUT_SCALE
net spindle1-vel-cmd-rpm-abs 	=> [HMOT](CARD0).pwmgen.05.value
net spindle1-enable      		=> [HMOT](CARD0).pwmgen.05.enable


# ---setup spindle1 control signals---

net spindle1-vel-cmd-rps        <=  spindle.1.speed-out-rps
net spindle1-vel-cmd-rps-abs    <=  spindle.1.speed-out-rps-abs
net spindle1-vel-cmd-rpm        <=  spindle.1.speed-out
net spindle1-vel-cmd-rpm-abs    <=  spindle.1.speed-out-abs
net spindle1-enable             <=  spindle.1.on
net spindle1-cw                 <=  spindle.1.forward
net spindle1-ccw                <=  spindle.1.reverse
net spindle1-brake-command      <=  spindle.1.brake
net spindle1-revs               =>  spindle.1.revs
net spindle1-vel-fb-rps         =>  spindle.1.speed-in
net spindle1-index-enable      <=>  spindle.1.index-enable
#net vfd-has-faulted		      =>  spindle.1.amp-fault-in

# ---Setup spindle1 at speed signals---

net spindle1-vel-cmd-rpm-abs spindle1-near-speed.in1
net spindle1-fb-rpm-abs-filtered spindle1-near-speed.in2
net spindle1-ready <= spindle1-near-speed.out => spindle.1.at-speed 

#### set halui connections

net spindle1-manual-cw     halui.spindle.1.forward
net spindle1-manual-ccw    halui.spindle.1.reverse
net spindle1-manual-stop   halui.spindle.1.stop


#  Use actual spindle1 velocity from spindle1 encoder
#  spindle0-velocity bounces around so we filter it with lowpass
#  spindle0-velocity is signed so we use absolute component to remove sign
#  spindle0-velocity is in RPS not RPM so we scale it.

setp     lowpass.spindle1.gain 1.000000
net spindle1-vel-fb-rpm => abs.spindle1.in
net spindle1-vel-fb-rpm-abs abs.spindle1.out => lowpass.spindle1.in
net spindle1-fb-rpm-abs-filtered  lowpass.spindle1.out  

# no filtering of bouncy spindle0 velocity as I want to use motion-adaptive-feed at some point


###speed sensing

# HSS speed sensing and scaling to RPM

net hss-10v-in =>	scale.spindle1.in 
setp scale.spindle1.gain 1806.3754
net spindle1-fb-rpm-abs-unfiltered => scale.spindle1.out























