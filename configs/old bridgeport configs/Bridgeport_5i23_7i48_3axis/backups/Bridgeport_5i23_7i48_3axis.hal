# Generated by PNCconf at Wed Aug  6 13:19:12 2014
# If you make changes to this file, they will be
# overwritten when you run PNCconf again

loadrt trivkins
loadrt [EMCMOT]EMCMOT servo_period_nsec=[EMCMOT]SERVO_PERIOD num_joints=[TRAJ]AXES
loadrt probe_parport
loadrt hostmot2
loadrt hm2_pci config="firmware=hm2/5i23/5i23_7i48_7i52.BIT num_encoders=7 num_pwmgens=6 num_3pwmgens=0 num_stepgens=0 sserial_port_0=11xxxxxx " 
setp     hm2_5i23.0.pwmgen.pwm_frequency 24000
setp     hm2_5i23.0.pwmgen.pdm_frequency 6000
setp     hm2_5i23.0.watchdog.timeout_ns 10000000
loadrt pid names=pid.x,pid.y,pid.z,pid.s
loadrt abs names=abs.spindle
loadrt lowpass names=lowpass.spindle
loadrt scale names=scale.spindle,scale.feedrate-override,scale.spindle-override,scale.spindle-load-in,scale.3
loadrt mux16 names=jogincr,foincr,soincr

addf hm2_5i23.0.read servo-thread
addf motion-command-handler servo-thread
addf motion-controller servo-thread
addf pid.x.do-pid-calcs                 servo-thread
addf pid.y.do-pid-calcs                 servo-thread
addf pid.z.do-pid-calcs                 servo-thread
addf pid.s.do-pid-calcs                 servo-thread
addf jogincr               servo-thread
addf foincr               servo-thread
addf soincr               servo-thread
addf abs.spindle                 servo-thread
addf scale.spindle                 servo-thread
addf scale.feedrate-override                 servo-thread
addf scale.spindle-override                 servo-thread
addf scale.spindle-load-in                 servo-thread
addf scale.3                 servo-thread
addf lowpass.spindle             servo-thread
addf hm2_5i23.0.write         servo-thread
addf hm2_5i23.0.pet_watchdog  servo-thread

# external output signals


# --- ESTOP-OUT ---
#net estop-out hm2_5i23.0.7i64.0.0.output-00

# --- SPINDLE-ON ---
#net spindle-on hm2_5i23.0.7i64.0.0.output-01

# --- SPINDLE-CW ---
#net spindle-cw hm2_5i23.0.7i64.0.0.output-02

# --- SPINDLE-CCW ---
#net spindle-ccw hm2_5i23.0.7i64.0.0.output-03

# --- SPINDLE-BRAKE ---
#net spindle-brake hm2_5i23.0.7i64.0.0.output-04

# --- COOLANT-MIST ---
#net coolant-mist hm2_5i23.0.7i64.0.0.output-05

# --- COOLANT-FLOOD ---
#net coolant-flood hm2_5i23.0.7i64.0.0.output-06

# --- MACHINE-IS-ENABLED ---
#net machine-is-enabled hm2_5i23.0.7i64.0.0.output-07

# --- DOUT-00 ---
#net dout-00 hm2_5i23.0.7i64.0.0.output-08

# external input signals


# --- JOG-INCR-A ---
#net jog-incr-a     <=  hm2_5i23.0.7i64.0.0.input-00

# --- FO-INCR-A ---
#net fo-incr-a     <=  hm2_5i23.0.7i64.0.0.input-01

# --- SO-INCR-A ---
#net so-incr-a     <=  hm2_5i23.0.7i64.0.0.input-02

# --- ESTOP-EXT ---
#net estop-ext     <=  hm2_5i23.0.7i64.0.0.input-04

# --- ALL-LIMIT ---
#net all-limit     <=  hm2_5i23.0.7i64.0.0.input-05

# --- HOME-X ---
#net home-x     <=  hm2_5i23.0.7i64.0.0.input-06

# --- HOME-Y ---
#net home-y     <=  hm2_5i23.0.7i64.0.0.input-07

# --- HOME-Z ---
#net home-z     <=  hm2_5i23.0.7i64.0.0.input-08

# --- CYCLE-START ---
#net cycle-start     <=  hm2_5i23.0.7i64.0.0.input-09

# --- ABORT ---
#net abort     <=  hm2_5i23.0.7i64.0.0.input-10

# --- JOG-X-POS ---
#net jog-x-pos     <=  hm2_5i23.0.7i64.0.0.input-11

# --- JOG-X-NEG ---
#net jog-x-neg     <=  hm2_5i23.0.7i64.0.0.input-12

# --- JOG-Y-POS ---
#net jog-y-pos     <=  hm2_5i23.0.7i64.0.0.input-13

# --- JOG-Y-NEG ---
#net jog-y-neg     <=  hm2_5i23.0.7i64.0.0.input-14

# --- JOG-Z-POS ---
#net jog-z-pos     <=  hm2_5i23.0.7i64.0.0.input-15

# --- JOG-Z-NEG ---
#net jog-z-neg     <=  hm2_5i23.0.7i64.0.0.input-16

# --- JOINT-SELECT-A ---
#net joint-select-a     <=  hm2_5i23.0.7i64.0.0.input-17

# --- JOINT-SELECT-B ---
#net joint-select-b     <=  hm2_5i23.0.7i64.0.0.input-18

# --- JOINT-SELECT-C ---
#net joint-select-c     <=  hm2_5i23.0.7i64.0.0.input-19

#*******************
#  AXIS X
#*******************

setp   pid.x.Pgain     [AXIS_0]P
setp   pid.x.Igain     [AXIS_0]I
setp   pid.x.Dgain     [AXIS_0]D
setp   pid.x.bias      [AXIS_0]BIAS
setp   pid.x.FF0       [AXIS_0]FF0
setp   pid.x.FF1       [AXIS_0]FF1
setp   pid.x.FF2       [AXIS_0]FF2
setp   pid.x.deadband  [AXIS_0]DEADBAND
setp   pid.x.maxoutput [AXIS_0]MAX_OUTPUT

net x-index-enable  <=>  pid.x.index-enable
net x-enable       => pid.x.enable
net x-output       => pid.x.output
net x-pos-cmd      => pid.x.command
net x-vel-fb       => pid.x.feedback-deriv
net x-pos-fb       => pid.x.feedback

# ---PWM Generator signals/setup---

setp   hm2_5i23.0.pwmgen.00.output-type 2
setp   hm2_5i23.0.pwmgen.00.scale  [AXIS_0]OUTPUT_SCALE

net x-output                             => hm2_5i23.0.pwmgen.00.value
net x-pos-cmd    axis.0.motor-pos-cmd
net x-enable     axis.0.amp-enable-out  => hm2_5i23.0.pwmgen.00.enable

# ---Encoder feedback signals/setup---

setp    hm2_5i23.0.encoder.00.counter-mode 0
setp    hm2_5i23.0.encoder.00.filter 1
setp    hm2_5i23.0.encoder.00.index-invert 0
setp    hm2_5i23.0.encoder.00.index-mask 0
setp    hm2_5i23.0.encoder.00.index-mask-invert 0
setp    hm2_5i23.0.encoder.00.scale  [AXIS_0]ENCODER_SCALE

net x-pos-fb               <=  hm2_5i23.0.encoder.00.position
net x-vel-fb               <=  hm2_5i23.0.encoder.00.velocity
net x-pos-fb               =>  axis.0.motor-pos-fb
net x-index-enable    axis.0.index-enable  <=>  hm2_5i23.0.encoder.00.index-enable
net x-pos-rawcounts        <=  hm2_5i23.0.encoder.00.rawcounts

# ---setup home / limit switch signals---

net home-x     =>  axis.0.home-sw-in
net all-limit     =>  axis.0.neg-lim-sw-in
net all-limit     =>  axis.0.pos-lim-sw-in

#*******************
#  AXIS Y
#*******************

setp   pid.y.Pgain     [AXIS_1]P
setp   pid.y.Igain     [AXIS_1]I
setp   pid.y.Dgain     [AXIS_1]D
setp   pid.y.bias      [AXIS_1]BIAS
setp   pid.y.FF0       [AXIS_1]FF0
setp   pid.y.FF1       [AXIS_1]FF1
setp   pid.y.FF2       [AXIS_1]FF2
setp   pid.y.deadband  [AXIS_1]DEADBAND
setp   pid.y.maxoutput [AXIS_1]MAX_OUTPUT

net y-index-enable  <=>  pid.y.index-enable
net y-enable       => pid.y.enable
net y-output       => pid.y.output
net y-pos-cmd      => pid.y.command
net y-vel-fb       => pid.y.feedback-deriv
net y-pos-fb       => pid.y.feedback

# ---PWM Generator signals/setup---

setp   hm2_5i23.0.pwmgen.01.output-type 2
setp   hm2_5i23.0.pwmgen.01.scale  [AXIS_1]OUTPUT_SCALE

net y-output                             => hm2_5i23.0.pwmgen.01.value
net y-pos-cmd    axis.1.motor-pos-cmd
net y-enable     axis.1.amp-enable-out  => hm2_5i23.0.pwmgen.01.enable

# ---Encoder feedback signals/setup---

setp    hm2_5i23.0.encoder.01.counter-mode 0
setp    hm2_5i23.0.encoder.01.filter 1
setp    hm2_5i23.0.encoder.01.index-invert 0
setp    hm2_5i23.0.encoder.01.index-mask 0
setp    hm2_5i23.0.encoder.01.index-mask-invert 0
setp    hm2_5i23.0.encoder.01.scale  [AXIS_1]ENCODER_SCALE

net y-pos-fb               <=  hm2_5i23.0.encoder.01.position
net y-vel-fb               <=  hm2_5i23.0.encoder.01.velocity
net y-pos-fb               =>  axis.1.motor-pos-fb
net y-index-enable    axis.1.index-enable  <=>  hm2_5i23.0.encoder.01.index-enable
net y-pos-rawcounts        <=  hm2_5i23.0.encoder.01.rawcounts

# ---setup home / limit switch signals---

net home-y     =>  axis.1.home-sw-in
net all-limit     =>  axis.1.neg-lim-sw-in
net all-limit     =>  axis.1.pos-lim-sw-in

#*******************
#  AXIS Z
#*******************

setp   pid.z.Pgain     [AXIS_2]P
setp   pid.z.Igain     [AXIS_2]I
setp   pid.z.Dgain     [AXIS_2]D
setp   pid.z.bias      [AXIS_2]BIAS
setp   pid.z.FF0       [AXIS_2]FF0
setp   pid.z.FF1       [AXIS_2]FF1
setp   pid.z.FF2       [AXIS_2]FF2
setp   pid.z.deadband  [AXIS_2]DEADBAND
setp   pid.z.maxoutput [AXIS_2]MAX_OUTPUT

net z-index-enable  <=>  pid.z.index-enable
net z-enable       => pid.z.enable
net z-output       => pid.z.output
net z-pos-cmd      => pid.z.command
net z-vel-fb       => pid.z.feedback-deriv
net z-pos-fb       => pid.z.feedback

# ---PWM Generator signals/setup---

setp   hm2_5i23.0.pwmgen.02.output-type 2
setp   hm2_5i23.0.pwmgen.02.scale  [AXIS_2]OUTPUT_SCALE

net z-output                             => hm2_5i23.0.pwmgen.02.value
net z-pos-cmd    axis.2.motor-pos-cmd
net z-enable     axis.2.amp-enable-out  => hm2_5i23.0.pwmgen.02.enable

# ---Encoder feedback signals/setup---

setp    hm2_5i23.0.encoder.02.counter-mode 0
setp    hm2_5i23.0.encoder.02.filter 1
setp    hm2_5i23.0.encoder.02.index-invert 0
setp    hm2_5i23.0.encoder.02.index-mask 0
setp    hm2_5i23.0.encoder.02.index-mask-invert 0
setp    hm2_5i23.0.encoder.02.scale  [AXIS_2]ENCODER_SCALE

net z-pos-fb               <=  hm2_5i23.0.encoder.02.position
net z-vel-fb               <=  hm2_5i23.0.encoder.02.velocity
net z-pos-fb               =>  axis.2.motor-pos-fb
net z-index-enable    axis.2.index-enable  <=>  hm2_5i23.0.encoder.02.index-enable
net z-pos-rawcounts        <=  hm2_5i23.0.encoder.02.rawcounts

# ---setup home / limit switch signals---

net home-z     =>  axis.2.home-sw-in
net all-limit     =>  axis.2.neg-lim-sw-in
net all-limit     =>  axis.2.pos-lim-sw-in

#*******************
#  SPINDLE S
#*******************

# ---PWM Generator signals/setup---

setp   hm2_5i23.0.pwmgen.05.output-type 2
setp   hm2_5i23.0.pwmgen.05.scale  [SPINDLE_9]OUTPUT_SCALE


net spindle-vel-cmd     => hm2_5i23.0.pwmgen.05.value
net machine-is-enabled      => hm2_5i23.0.pwmgen.05.enable

# ---Encoder feedback signals/setup---

setp    hm2_5i23.0.encoder.05.counter-mode 0
setp    hm2_5i23.0.encoder.05.filter 1
setp    hm2_5i23.0.encoder.05.index-invert 0
setp    hm2_5i23.0.encoder.05.index-mask 0
setp    hm2_5i23.0.encoder.05.index-mask-invert 0
setp    hm2_5i23.0.encoder.05.scale  [SPINDLE_9]ENCODER_SCALE

net spindle-revs              <=  hm2_5i23.0.encoder.05.position
net spindle-vel-fb            <=  hm2_5i23.0.encoder.05.velocity
net spindle-index-enable     <=>  hm2_5i23.0.encoder.05.index-enable

# ---setup spindle control signals---

net spindle-vel-cmd-rps        <=  motion.spindle-speed-out-rps
net spindle-vel-cmd-rps-abs    <=  motion.spindle-speed-out-rps-abs
net spindle-vel-cmd            <=  motion.spindle-speed-out
net spindle-vel-cmd-rpm-abs    <=  motion.spindle-speed-out-abs
net spindle-on                 <=  motion.spindle-on
net spindle-cw                 <=  motion.spindle-forward
net spindle-ccw                <=  motion.spindle-reverse
net spindle-brake              <=  motion.spindle-brake
net spindle-revs               =>  motion.spindle-revs
net spindle-at-speed           =>  motion.spindle-at-speed
net spindle-vel-fb             =>  motion.spindle-speed-in
net spindle-index-enable      <=>  motion.spindle-index-enable

# ---Setup spindle at speed signals---

sets spindle-at-speed true

#  Use ACTUAL spindle velocity from spindle encoder
#  spindle-velocity bounces around so we filter it with lowpass
#  spindle-velocity is signed so we use absolute component to remove sign
#  ACTUAL velocity is in RPS not RPM so we scale it.

setp     scale.spindle.gain 60
setp     lowpass.spindle.gain 1.000000
net spindle-vel-fb        =>   lowpass.spindle.in
net spindle-fb-filtered-rps    lowpass.spindle.out      =>   abs.spindle.in
net spindle-fb-filtered-abs-rps    abs.spindle.out      =>   scale.spindle.in
net spindle-fb-filtered-abs-rpm    scale.spindle.out

#******************************
# connect miscellaneous signals
#******************************

#  ---HALUI signals---

net joint-select-a        halui.joint.0.select
net x-is-homed            halui.joint.0.is-homed
net jog-x-pos             halui.jog.0.plus
net jog-x-neg             halui.jog.0.minus
net jog-x-analog          halui.jog.0.analog
net joint-select-b        halui.joint.1.select
net y-is-homed            halui.joint.1.is-homed
net jog-y-pos             halui.jog.1.plus
net jog-y-neg             halui.jog.1.minus
net jog-y-analog          halui.jog.1.analog
net joint-select-c        halui.joint.2.select
net z-is-homed            halui.joint.2.is-homed
net jog-z-pos             halui.jog.2.plus
net jog-z-neg             halui.jog.2.minus
net jog-z-analog          halui.jog.2.analog
net jog-selected-pos      halui.jog.selected.plus
net jog-selected-neg      halui.jog.selected.minus
net spindle-manual-cw     halui.spindle.forward
net spindle-manual-ccw    halui.spindle.reverse
net spindle-manual-stop   halui.spindle.stop
net machine-is-on         halui.machine.is-on
net jog-speed             halui.jog-speed 
net MDI-mode              halui.mode.is-mdi

#  ---coolant signals---

net coolant-mist      <=  iocontrol.0.coolant-mist
net coolant-flood     <=  iocontrol.0.coolant-flood

#  ---probe signal---

net probe-in     =>  motion.probe-input

# ---jog button signals---

sets    jog-speed 1.000000

# ---jogwheel signals to mesa encoder - shared MPG---

net joint-selected-count     <=  hm2_5i23.0.encoder.06.count

#  ---mpg signals---

#       for axis x MPG
setp    axis.0.jog-vel-mode 0
net selected-jog-incr    =>  axis.0.jog-scale
net joint-select-a       =>  axis.0.jog-enable
net joint-selected-count =>  axis.0.jog-counts

#       for axis y MPG
setp    axis.1.jog-vel-mode 0
net selected-jog-incr    =>  axis.1.jog-scale
net joint-select-b       =>  axis.1.jog-enable
net joint-selected-count =>  axis.1.jog-counts

#       for axis z MPG
setp    axis.2.jog-vel-mode 0
net selected-jog-incr    =>  axis.2.jog-scale
net joint-select-c       =>  axis.2.jog-enable
net joint-selected-count =>  axis.2.jog-counts


# connect selectable mpg jog increments 

net jog-incr-a           =>  jogincr.sel0
net jog-incr-b           =>  jogincr.sel1
net jog-incr-c           =>  jogincr.sel2
net jog-incr-d           =>  jogincr.sel3
net selected-jog-incr    <=  jogincr.out-f
    setp jogincr.debounce-time      0.200000
    setp jogincr.use-graycode      False
    setp jogincr.suppress-no-input False
    setp jogincr.in00          0.000000
    setp jogincr.in01          0.000100
    setp jogincr.in02          0.000500
    setp jogincr.in03          0.001000
    setp jogincr.in04          0.005000
    setp jogincr.in05          0.010000
    setp jogincr.in06          0.050000
    setp jogincr.in07          0.100000
    setp jogincr.in08          0.000000
    setp jogincr.in09          0.000000
    setp jogincr.in10          0.000000
    setp jogincr.in11          0.000000
    setp jogincr.in12          0.000000
    setp jogincr.in13          0.000000
    setp jogincr.in14          0.000000
    setp jogincr.in15          0.000000

# connect feed overide increments - switches

    setp halui.feed-override.count-enable true
    setp halui.feed-override.direct-value true
    setp halui.feed-override.scale .01
net feedoverride-incr   =>  halui.feed-override.counts
net fo-incr-a           =>  foincr.sel0
net fo-incr-b           =>  foincr.sel1
net fo-incr-c           =>  foincr.sel2
net fo-incr-d           =>  foincr.sel3
net feedoverride-incr   <=  foincr.out-s
    setp foincr.debounce-time      0.200000
    setp foincr.use-graycode      False
    setp foincr.suppress-no-input False
    setp foincr.in00          0.000000
    setp foincr.in01          5.000000
    setp foincr.in02          10.000000
    setp foincr.in03          25.000000
    setp foincr.in04          50.000000
    setp foincr.in05          75.000000
    setp foincr.in06          90.000000
    setp foincr.in07          100.000000
    setp foincr.in08          110.000000
    setp foincr.in09          125.000000
    setp foincr.in10          140.000000
    setp foincr.in11          150.000000
    setp foincr.in12          165.000000
    setp foincr.in13          180.000000
    setp foincr.in14          190.000000
    setp foincr.in15          200.000000

# connect spindle overide increments 

    setp halui.spindle-override.count-enable true
    setp halui.spindle-override.direct-value true
    setp halui.spindle-override.scale .01
net spindleoverride-incr  =>  halui.spindle-override.counts
net so-incr-a             =>  soincr.sel0
net so-incr-b             =>  soincr.sel1
net so-incr-c             =>  soincr.sel2
net so-incr-d             =>  soincr.sel3
net spindleoverride-incr  <=  soincr.out-s
    setp soincr.debounce-time      0.200000
    setp soincr.use-graycode      False
    setp soincr.suppress-no-input False
    setp soincr.in00          0.000000
    setp soincr.in01          5.000000
    setp soincr.in02          10.000000
    setp soincr.in03          25.000000
    setp soincr.in04          50.000000
    setp soincr.in05          75.000000
    setp soincr.in06          90.000000
    setp soincr.in07          100.000000
    setp soincr.in08          110.000000
    setp soincr.in09          125.000000
    setp soincr.in10          140.000000
    setp soincr.in11          150.000000
    setp soincr.in12          165.000000
    setp soincr.in13          180.000000
    setp soincr.in14          190.000000
    setp soincr.in15          200.000000

#  ---motion control signals---

net in-position               <=  motion.in-position
net machine-is-enabled        <=  motion.motion-enabled

#  ---digital in / out signals---

net dout-00     <=  motion.digital-out-00
#  ---estop signals---

net estop-out     <=  iocontrol.0.user-enable-out
net estop-ext     =>  iocontrol.0.emc-enable-in

#  ---manual tool change signals---

loadusr -W hal_manualtoolchange
net tool-change-request     iocontrol.0.tool-change       =>  hal_manualtoolchange.change
net tool-change-confirmed   iocontrol.0.tool-changed      <=  hal_manualtoolchange.changed
net tool-number             iocontrol.0.tool-prep-number  =>  hal_manualtoolchange.number
net tool-prepare-loopback   iocontrol.0.tool-prepare      =>  iocontrol.0.tool-prepared


