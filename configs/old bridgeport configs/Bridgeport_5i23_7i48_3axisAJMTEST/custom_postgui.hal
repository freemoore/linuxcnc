# Include your custom_postgui HAL commands here
# This file will not be overwritten when you run PNCconf again
#select axis using joystick
#use mpg to drive it
#maybe joystick + button = continuous

#loadrt 3 OR gates (x-jog-on.OR,y-jog-on.OR,z-jog-on.OR):
loadrt or2 names=x-jog-on,y-jog-on,z-jog-on

#add 'mpgscaler' to scale names in main .hal

addf x-jog-on	servo-thread
addf y-jog-on	servo-thread
addf z-jog-on	servo-thread
#addf mpgscaler	servo-thread

#setp mpgscaler.gain 0.25
setp    [HMOT](CARD0).encoder.04.scale 0.25

# stick signal to hardware pin (so sticks are connected to hal)
# done in main hal file

# button signal to hardware pin (so buttons are connected to hal)
net joyXYBtn     <=  [HMOT](CARD0).7i84.0.0.input-12
net joyZBtn <=  [HMOT](CARD0).7i84.0.0.input-15

# mpg signal to hardware pins - done by pncconf, encoder.5.counts is what we need here?
#net mpg-counts-signal <= mesa.card.encoder.5.counts
#net mpg-counts-signal  		mpgscaler.in
#net scaled-mpg-pulses  		mpgscaler.out 
#net scaled-mpg-pulses	<=  [HMOT](CARD0).encoder.04.count
net mpg-counts-signal   <=  [HMOT](CARD0).encoder.04.count


#select axis and enable jogging with either stick direction
net jog-x-pos => x-jog-on.in0
net jog-x-neg => x-jog-on.in1
net jogXon <= x-jog-on.out

net jog-y-pos => y-jog-on.in0
net jog-y-neg => y-jog-on.in1
net jogYon <= y-jog-on.out

net jog-z-pos => z-jog-on.in0
net jog-z-neg => z-jog-on.in1
net jogZon <= z-jog-on.out

# signal to joint select pin (so joint is selected when stick is moved, in either direction)
net jogXon => halui.joint.0.select  halui.axis.x.select
net jogYon => halui.joint.1.select  halui.axis.y.select
net jogZon => halui.joint.2.select  halui.axis.z.select

#net jog-on signal to jog-enabler.OR.gate OUT0 (so jog will only happen on selected axes)
net jogXon => axis.x.jog-enable  #halui.x.jog-enable
net jogYon => axis.y.jog-enable  #halui.y.jog-enable
net jogZon => axis.z.jog-enable  #halui.z.jog-enable

#signal to pos/vel selector (so btn pressed = vel-mode TRUE, making continuous jog when mpg is turned):
net joyXYBtn =>	axis.x.jog-vel-mode
net joyXYBtn =>	axis.y.jog-vel-mode
net joyZBtn  =>	axis.z.jog-vel-mode

# mpg signal to each axis 
net mpg-counts-signal => axis.x.jog-counts
net mpg-counts-signal => axis.y.jog-counts
net mpg-counts-signal => axis.z.jog-counts

setp axis.x.jog-scale 0.1
setp axis.y.jog-scale 0.1
setp axis.z.jog-scale 0.1



